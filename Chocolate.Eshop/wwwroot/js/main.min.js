"use strict"; var $ = jQuery.noConflict(); $.extend($.easing, { def: "easeOutQuad", swing: function (t, e, n, a, i) { return $.easing[$.easing.def](t, e, n, a, i) }, easeOutQuad: function (t, e, n, a, i) { return -a * (e /= i) * (e - 2) + n }, easeOutQuint: function (t, e, n, a, i) { return a * ((e = e / i - 1) * e * e * e * e + 1) + n } }), window.Donald = {}, function () { var t, e, n, a, i, o, s, l, d, r, c; Donald.$window = $(window), Donald.$body = $(document.body), Donald.status = "", Donald.minDesktopWidth = 992, Donald.isIE = navigator.userAgent.indexOf("Trident") >= 0, Donald.isEdge = navigator.userAgent.indexOf("Edge") >= 0, Donald.isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent), Donald.defaults = { animation: { name: "fadeIn", duration: "1.2s", delay: ".2s" }, isotope: { itemsSelector: ".grid-item", layoutMode: "masonry", percentPosition: !0, masonry: { columnWidth: ".grid-space" } }, minipopup: { message: "", productClass: "", imageSrc: "", imageLink: "#", name: "", nameLink: "#", price: "", count: null, rating: null, delay: 4e3, space: 20, priceTemplate: '<span class="product-price">{{price}}</span>', ratingTemplate: '<div class="ratings-container"><div class="ratings-full"><span class="ratings" style="width:{{rating}}"></span><span class="tooltiptext tooltip-top"></span></div></div>', priceQuantityTemplate: '<div class="price-box"><span class="product-quantity">{{count}}</span><span class="product-price">{{price}}</span></div>', template: '<div class="minipopup-box"><p class="minipopup-title">{{message}}</p><div class="product {{productClass}} mb-0"><figure class="product-media"><a href="{{imageLink}}"><img src="{{imageSrc}}" alt="product" width="90" height="90"></a></figure><div class="product-detail"><a href="{{nameLink}}" class="product-name">{{name}}</a>{{detailTemplate}}</div></div></div>' }, popup: { removalDelay: 350, callbacks: { open: function () { $("html").css("overflow-y", "hidden"), $("body").css("overflow-x", "visible"), $(".mfp-wrap").css("overflow", "hidden auto"), $(".sticky-header.fixed").css("padding-right", window.innerWidth - document.body.clientWidth) }, close: function () { $("html").css("overflow-y", ""), $("body").css("overflow-x", "hidden"), $(".mfp-wrap").css("overflow", ""), $(".sticky-header.fixed").css("padding-right", "") } } }, popupPresets: { login: { type: "ajax", mainClass: "mfp-login mfp-fade", tLoading: "", preloader: !1 }, video: { type: "iframe", mainClass: "mfp-fade", preloader: !1, closeBtnInside: !1 }, quickview: { type: "ajax", mainClass: "mfp-product mfp-fade", tLoading: "", preloader: !1 } }, slider: { responsiveClass: !0, navText: ['<i class="d-icon-angle-left">', '<i class="d-icon-angle-right">'], checkVisible: !1, items: 1, smartSpeed: Donald.isEdge ? 200 : 700, autoplaySpeed: Donald.isEdge ? 200 : 1e3, autoplayTimeout: 1e4 }, sliderPresets: { "intro-slider": { animateIn: "fadeIn", animateOut: "fadeOut" }, "product-single-carousel": { dots: !1, nav: !0 }, "product-gallery-carousel": { dots: !1, nav: !0, margin: 20, items: 1, responsive: { 576: { items: 2 }, 768: { items: 3 } } } }, sliderThumbs: { margin: 0, items: 4, dots: !1, nav: !0, navText: ['<i class="fas fa-chevron-left">', '<i class="fas fa-chevron-right">'] }, stickyContent: { minWidth: Donald.minDesktopWidth, maxWidth: 2e4, top: !1, hide: !1, max_index: 1060 }, stickyHeader: { activeScreenWidth: Donald.minDesktopWidth }, stickyFooter: { minWidth: 0, maxWidth: 767, top: 150, hide: !0, max_index: 2100 }, stickySidebar: { autoInit: !0, minWidth: 991, containerSelector: ".sticky-sidebar-wrapper", autoFit: !0, activeClass: "sticky-sidebar-fixed", top: 93, bottom: 0 }, templateCartAddedAlert: '<div class="alert alert-simple alert-btn cart-added-alert"><a href="cart.html" class="btn btn-success btn-md">View Cart</a><span>"{{name}}" has been added to your cart.</span><button type="button" class="btn btn-link btn-close"><i class="d-icon-times"></i></button></div>', zoomImage: { responsive: !0, zoomWindowFadeIn: 750, zoomWindowFadeOut: 500, borderSize: 0, zoomType: "inner", cursor: "crosshair" } }, Donald.$ = function (t) { return t instanceof jQuery ? t : $(t) }, Donald.call = function (t, e) { setTimeout(t, e) }, Donald.byId = function (t) { return document.getElementById(t) }, Donald.byTag = function (t, e) { return e ? e.getElementsByTagName(t) : document.getElementsByTagName(t) }, Donald.byClass = function (t, e) { return e ? e.getElementsByClassName(t) : document.getElementsByClassName(t) }, Donald.setCookie = function (t, e, n) { var a = new Date; a.setTime(a.getTime() + 24 * n * 60 * 60 * 1e3), document.cookie = t + "=" + e + ";expires=" + a.toUTCString() + ";path=/" }, Donald.getCookie = function (t) { for (var e = t + "=", n = document.cookie.split(";"), a = 0; a < n.length; ++a) { for (var i = n[a]; " " == i.charAt(0);)i = i.substring(1); if (0 == i.indexOf(e)) return i.substring(e.length, i.length) } return "" }, Donald.parseOptions = function (t) { return "string" == typeof t ? JSON.parse(t.replace(/'/g, '"').replace(";", "")) : {} }, Donald.parseTemplate = function (t, e) { return t.replace(/\{\{(\w+)\}\}/g, (function () { return e[arguments[1]] })) }, Donald.appear = (d = [], r = !1, c = function () { for (var r = d.length; r--;)t = d[r], e = window.pageXOffset, n = window.pageYOffset, a = t.el.getBoundingClientRect(), i = a.left + e, o = a.top + n, s = t.options.accX, l = t.options.accY, o + a.height + l >= n && o <= n + window.innerHeight + l && i + a.width + s >= e && i <= e + window.innerWidth + s && (t.fn.call(t.el, t.data), d.splice(r, 1)) }, window.addEventListener("scroll", c, { passive: !0 }), window.addEventListener("resize", c, { passive: !0 }), $(window).on("appear.check", c), function (t, e, n) { var a = { data: void 0, accX: 0, accY: 0 }; n && (n.data && (a.data = n.data), n.accX && (a.accX = n.accX), n.accY && (a.accY = n.accY)), d.push({ el: t, fn: e, options: a }), r || (r = Donald.requestTimeout(c, 100)) }), Donald.zoomImage = function (t) { $.fn.elevateZoom && t && Donald.$(t).find("img").each((function () { var t = $(this); Donald.defaults.zoomImage.zoomContainer = t.parent(), t.elevateZoom(Donald.defaults.zoomImage), Donald.zoomImageObjects.push(t) })) }, Donald.initZoom = function () { Donald.zoomImageObjects = [], window.addEventListener("resize", (function () { Donald.zoomImageObjects.forEach((function (t) { t.each((function () { var t = $(this).data("elevateZoom"); t && t.refresh() })) })) }), { passive: !0 }) }, Donald.countTo = function (t) { $.fn.countTo && Donald.$(t).each((function () { Donald.appear(this, (function () { var t = $(this); setTimeout((function () { t.countTo({ onComplete: function () { t.addClass("complete") } }) }), 300) })) })) }, Donald.countdown = function (t) { $.fn.countdown && Donald.$(t).each((function () { var t = $(this), e = t.data("until"), n = t.data("compact"), a = t.data("format") ? t.data("format") : "DHMS", i = t.data("labels-short") ? ["Years", "Months", "Weeks", "Days", "Hours", "Mins", "Secs"] : ["Years", "Months", "Weeks", "Days", "Hours", "Minutes", "Seconds"], o = t.data("labels-short") ? ["Year", "Month", "Week", "Day", "Hour", "Min", "Sec"] : ["Year", "Month", "Week", "Day", "Hour", "Minute", "Second"]; if (t.data("relative")) l = e; else var s = e.split(", "), l = new Date(s[0], s[1] - 1, s[2]); t.countdown({ until: l, format: a, padZeroes: !0, compact: n, compactLabels: [" y", " m", " w", " days, "], timeSeparator: " : ", labels: i, labels1: o }) })) }, Donald.priceSlider = function (t, e) { "object" == typeof noUiSlider && Donald.$(t).each((function () { var t = this; noUiSlider.create(t, $.extend(!0, { start: [18, 35], connect: !0, step: 1, range: { min: 18, max: 35 } }, e)), t.noUiSlider.on("update", (function (e, n) { e = e.map((function (t) { return "$" + parseInt(t) })); $(t).parent().find(".filter-price-range").text(e.join(" - ")) })) })) }, Donald.isotopes = function (t, e) { if ("function" == typeof imagesLoaded && $.fn.isotope) { var n = this; Donald.$(t).each((function () { var t = $(this), a = $.extend(!0, {}, n.isotopeOptions, Donald.parseOptions(t.attr("data-grid-options")), e || {}); t.isotope(a) })) } }, Donald.initNavFilter = function (t) { $.fn.isotope && Donald.$(t).on("click", (function (t) { var e = $(this), n = e.attr("data-filter"), a = e.parent().parent().attr("data-target"); $(a || ".grid").isotope({ filter: n }), e.parent().siblings().children().removeClass("active"), e.addClass("active"), t.preventDefault() })) }, Donald.parallax = function (t, e) { $.fn.themePluginParallax && Donald.$(t).each((function () { var t = $(this); t.themePluginParallax($.extend(!0, Donald.parseOptions(t.attr("data-parallax-options")), e)) })) }, Donald.headerToggleSearch = function (t) { var e = Donald.$(t); e.find(".form-control").on("focusin", (function (t) { e.addClass("show") })).on("focusout", (function (t) { e.removeClass("show") })) }, Donald.stickyHeader = function (t) { var e = Donald.$(t); if (0 != e.length) { var n, a, i = !1, o = function () { (n = e[0].offsetHeight, a = e.offset().top + n, e.hasClass("has-dropdown")) && (e.find(".category-dropdown .dropdown-box").length && (a += e.find(".category-dropdown .dropdown-box")[0].offsetHeight)); !i && window.innerWidth >= Donald.defaults.stickyHeader.activeScreenWidth && (i = !0, e.wrap('<div class="sticky-wrapper" style="height:' + n + 'px"></div>')), Donald.$window.off("resize", o) }, s = function () { window.innerWidth >= Donald.defaults.stickyHeader.activeScreenWidth && window.pageYOffset >= a ? (e[0].classList.add("fixed"), document.body.classList.add("sticky-header-active")) : (e[0].classList.remove("fixed"), document.body.classList.remove("sticky-header-active")) }; window.addEventListener("scroll", s, { passive: !0 }), Donald.$window.on("resize", o), Donald.$window.on("resize", s), Donald.call(o, 500), Donald.call(s, 500) } }, Donald.stickyContent = function (t, e) { var n = Donald.$(t), a = $.extend({}, Donald.defaults.stickyContent, e); if (0 != n.length) { var i = function () { n.each((function (t) { var e = $(this); if (e.data("is-wrap")) (window.innerWidth < a.minWidth || window.innerWidth >= a.maxWidth) && (e.unwrap(".sticky-content-wrapper"), e.data("is-wrap", !1)); else { var n, i = e.removeClass("fixed").outerHeight(!0); if (n = e.offset().top + i, e.hasClass("has-dropdown")) { var o = e.find(".category-dropdown .dropdown-box"); o.length && (n += o[0].offsetHeight) } e.data("top", n), function (t, e) { window.innerWidth >= a.minWidth && window.innerWidth <= a.maxWidth && (t.wrap('<div class="sticky-content-wrapper"></div>'), t.parent().css("height", e + "px"), t.data("is-wrap", !0)) }(e, i) } })) }, o = function (t) { t && !t.isTrusted || n.each((function (t) { var e = $(this); window.pageYOffset > (0 == a.top ? e.data("top") : a.top) && window.innerWidth >= a.minWidth && window.innerWidth <= a.maxWidth ? (e.hasClass("fix-top") ? (null == e.data("offset-top") && function (t) { var e = 0, n = 0; $(".sticky-content.fixed.fix-top").each((function () { e += $(this)[0].offsetHeight, n++ })), t.data("offset-top", e), t.data("z-index", a.max_index - n) }(e), e.css("margin-top", e.data("offset-top") + "px")) : e.hasClass("fix-bottom") && (null == e.data("offset-bottom") && function (t) { var e = 0, n = 0; $(".sticky-content.fixed.fix-bottom").each((function () { e += $(this)[0].offsetHeight, n++ })), t.data("offset-bottom", e), t.data("z-index", a.max_index - n) }(e), e.css("margin-bottom", e.data("offset-bottom") + "px")), e.css("z-index", e.data("z-index")), e.addClass("fixed"), a.hide && e.parent(".sticky-content-wrapper").css("display", "")) : (e.removeClass("fixed"), e.css("margin-top", ""), e.css("margin-bottom", ""), a.hide && e.parent(".sticky-content-wrapper").css("display", "none")) })) }; Donald.call(i, 550), Donald.call(o, 560), Donald.call((function () { window.addEventListener("scroll", o, { passive: !0 }), Donald.$window.on("resize", i), Donald.$window.on("resize", o) }), 700) } }, Donald.initAlert = function (t) { Donald.$body.on("click", t + " .btn-close", (function (e) { $(this).closest(t).fadeOut((function () { $(this).remove() })) })) }, Donald.initAccordion = function (t) { Donald.$body.on("click", t, (function (t) { var n = $(this), a = n.closest(".card").find(n.attr("href")), i = n.closest(".accordion"); t.preventDefault(), 0 === i.find(".collapsing").length && 0 === i.find(".expanding").length && (a.hasClass("expanded") ? i.hasClass("radio-type") || e(a) : a.hasClass("collapsed") && (i.find(".expanded").length > 0 ? Donald.isIE ? e(i.find(".expanded"), (function () { e(a) })) : (e(i.find(".expanded")), e(a)) : e(a))) })); var e = function (e, n) { var a = e.closest(".card").find(t); e.hasClass("expanded") ? (a.removeClass("collapse").addClass("expand"), e.addClass("collapsing").slideUp(300, (function () { e.removeClass("expanded collapsing").addClass("collapsed"), n && n() }))) : e.hasClass("collapsed") && (a.removeClass("expand").addClass("collapse"), e.addClass("expanding").slideDown(300, (function () { e.removeClass("collapsed expanding").addClass("expanded"), n && n() }))) } }, Donald.initTab = function (t) { Donald.$body.on("click", ".tab .nav-link", (function (t) { var e = $(this); if (t.preventDefault(), !e.hasClass("active")) { var n = $(e.attr("href")); n.parent().find(".active").removeClass("in active"), n.addClass("active in"), e.parent().parent().find(".active").removeClass("active"), e.addClass("active") } })).on("click", ".link-to-tab", (function (t) { var e = $(t.currentTarget).attr("href"), n = $(e), a = n.parent().siblings(".nav"); t.preventDefault(), n.siblings().removeClass("active in"), n.addClass("active in"), a.find(".nav-link").removeClass("active"), a.find('[href="' + e + '"]').addClass("active"), $("html").animate({ scrollTop: n.offset().top - 150 }) })) }, Donald.playableVideo = function (t) { $(t + " .video-play").on("click", (function (e) { var n = $(this).closest(t); n.hasClass("playing") ? n.removeClass("playing").addClass("paused").find("video")[0].pause() : n.removeClass("paused").addClass("playing").find("video")[0].play(), e.preventDefault() })), $(t + " video").on("ended", (function () { $(this).closest(".post-video").removeClass("playing") })) }, Donald.appearAnimate = function (t) { Donald.$(t).each((function () { var t = this; Donald.appear(t, (function () { if (t.classList.contains("appear-animate")) { var e = $.extend({}, Donald.defaults.animation, Donald.parseOptions(t.getAttribute("data-animation-options"))); Donald.call((function () { t.style["animation-duration"] = e.duration, t.style["animation-delay"] = e.delay, t.classList.add(e.name), setTimeout((function () { t.classList.add("appear-animation-visible") }), e.delay ? 1e3 * Number(e.delay.slice(0, -1)) + 500 * Number(e.duration.slice(0, -1)) : 500 * Number(e.duration.slice(0, -1))) })) } })) })) }, Donald.stickySidebar = function (t) { $.fn.themeSticky && Donald.$(t).each((function () { var t = $(this); t.themeSticky($.extend(Donald.defaults.stickySidebar, Donald.parseOptions(t.attr("data-sticky-options")))), t.trigger("recalc.pin") })) }, Donald.refreshSidebar = function (t) { $.fn.themeSticky && Donald.$(t).each((function () { $(this).trigger("recalc.pin") })) }, Donald.ratingTooltip = function (t) { for (var e = Donald.byClass("ratings-full", t || document.body), n = e.length, a = function () { var t = this.firstElementChild.clientWidth / this.clientWidth * 5; this.lastElementChild.innerText = t ? t.toFixed(2) : t }, i = 0; i < n; ++i)e[i].addEventListener("mouseover", a), e[i].addEventListener("touchstart", a) }, Donald.popup = function (t, e) { var n = $.magnificPopup.instance, a = $.extend(!0, {}, Donald.defaults.popup, void 0 !== e ? Donald.defaults.popupPresets[e] : {}, t); n.isOpen && n.content && !n.content.hasClass("login-popup") ? (n.close(), setTimeout((function () { $.magnificPopup.open(a) }), 500)) : $.magnificPopup.open(a) }, Donald.initPopups = function () { Donald.$body.on("click", "a.login, .login-link", (function (t) { t.preventDefault(), Donald.popup({ items: { src: $(t.currentTarget).attr("href") } }, "login") })).on("click", ".register-link", (function (t) { t.preventDefault(), Donald.popup({ items: { src: $(t.currentTarget).attr("href") }, callbacks: { ajaxContentAdded: function () { this.wrap.find('[href="#register"]').click() } } }, "login") })).on("click", ".btn-iframe", (function (t) { t.preventDefault(), Donald.popup({ items: { src: $(t.currentTarget).attr("href") } }, "video") })), Donald.$body.hasClass("home") && "true" !== Donald.getCookie("hideNewsletterPopup") && setTimeout((function () { Donald.popup({ items: { src: "ajax/newsletter.html" }, type: "ajax", tLoading: "", mainClass: "mfp-newsletter mfp-flip-popup", callbacks: { beforeClose: function () { $("#hide-newsletter-popup")[0].checked && Donald.setCookie("hideNewsletterPopup", !0, 7) } } }) }), 7500) }, Donald.initPurchasedMinipopup = function () { (Donald.byClass("product-single").length || Donald.byClass("main-content").length) && setInterval((function () { Donald.Minipopup.open({ message: "Someone just purchased below.", productClass: " product-list-sm", name: "Daisy Bag Sonia by Sonia Rykiel", nameLink: "product.html", imageSrc: "images/cart/product-1.jpg", price: "$199", rating: 5 }, (function (t) { Donald.ratingTooltip(t[0]) })) }), 6e4) }, Donald.initScrollTopButton = function () { var t = Donald.byId("scroll-top"); t.addEventListener("click", (function (t) { $("html, body").animate({ scrollTop: 0 }, 600), t.preventDefault() })); var e = function () { window.pageYOffset > 400 ? t.classList.add("show") : t.classList.remove("show") }; Donald.call(e, 500), window.addEventListener("scroll", e, { passive: !0 }) }, Donald.requestTimeout = function (t, e) { var n = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame; if (!n) return setTimeout(t, e); var a, i = new Object; return i.val = n((function o(s) { a || (a = s), s - a >= e ? t() : i.val = n(o) })), i }, Donald.requestInterval = function (t, e, n) { var a = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame; if (!a) return n ? setInterval(t, e) : setTimeout(t, n); var i, o, s = new Object; return s.val = a((function l(d) { i || (i = o = d), !n || d - i < n ? d - o > e ? (t(), s.val = a(l), o = d) : s.val = a(l) : t() })), s }, Donald.deleteTimeout = function (t) { if (t) { var e = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame; return e ? t.val ? e(t.val) : void 0 : clearTimeout(t) } }, Donald.sidebar = function () { var t = window.innerWidth < Donald.minDesktopWidth, e = function () { window.innerWidth < Donald.minDesktopWidth && !t ? (this.$sidebar.find(".sidebar-content, .filter-clean").removeAttr("style"), this.$sidebar.find(".sidebar-content").attr("style", ""), this.$sidebar.siblings(".toolbox").children(":not(:first-child)").removeAttr("style")) : window.innerWidth >= Donald.minDesktopWidth && !this.$sidebar.hasClass("closed") && t && (this.$sidebar.addClass("closed"), this.$sidebar.find(".sidebar-content").css("display", "none")), t = window.innerWidth < Donald.minDesktopWidth }; function n(t) { return this.init(t) } return n.prototype.init = function (t) { var n = this; return n.name = t, n.$sidebar = $("." + t), n.isNavigation = !1, n.$sidebar.length && (n.isNavigation = n.$sidebar.hasClass("sidebar-fixed") && n.$sidebar.parent().hasClass("toolbox-wrap"), n.isNavigation && (e = e.bind(this), Donald.$window.on("resize", e)), Donald.$window.on("resize", (function () { Donald.$body.removeClass(t + "-active") })), n.$sidebar.find(".sidebar-toggle, .sidebar-toggle-btn").add("sidebar" === t ? ".left-sidebar-toggle" : "." + t + "-toggle").on("click", (function (t) { n.toggle(), $(this).blur(), Donald.refreshSidebar(".sticky-sidebar"), t.preventDefault() })), n.$sidebar.find(".sidebar-overlay, .sidebar-close").on("click", (function (e) { Donald.$body.removeClass(t + "-active"), e.preventDefault() }))), !1 }, n.prototype.toggle = function () { var t = this; if (window.innerWidth >= Donald.minDesktopWidth && t.$sidebar.hasClass("sidebar-fixed")) { var e = t.$sidebar.hasClass("closed"); if (t.isNavigation && (e || t.$sidebar.find(".filter-clean").hide(), t.$sidebar.siblings(".toolbox").children(":not(:first-child)").fadeToggle("fast"), t.$sidebar.find(".sidebar-content").stop().animate({ height: "toggle", "margin-bottom": e ? "toggle" : -6 }, (function () { $(this).css("margin-bottom", ""), e && t.$sidebar.find(".filter-clean").fadeIn("fast") }))), t.$sidebar.hasClass("shop-sidebar")) { var n = $(".main-content .product-wrapper"); if (n.length) if (n.hasClass("product-lists")) n.toggleClass("row cols-xl-2", !e); else { var a = n.data("toggle-cols"), i = n.attr("class").match(/cols-\w*-*\d/g), o = i ? Math.max.apply(null, i.map((function (t) { return t.match(/\d/)[0] }))) : 0; e ? 4 === o && 3 == a && n.removeClass("cols-md-4") : 3 === o && (n.addClass("cols-md-4"), a || n.data("toggle-cols", 3)) } } t.$sidebar.toggleClass("closed") } else t.$sidebar.find(".sidebar-overlay .sidebar-close").css("margin-left", -(window.innerWidth - document.body.clientWidth)), Donald.$body.toggleClass(t.name + "-active").removeClass("closed"), window.innerWidth >= 1200 && Donald.$body.hasClass("with-flex-container") && $(".owl-carousel").trigger("refresh.owl.carousel") }, function (t) { return new n(t).init(t) } }(), Donald.initProductSingle = function () { function t(t) { return this.init(t) } var e = function (t) { var e = t.$thumbsWrap.offset().top + t.$thumbsWrap[0].offsetHeight, n = t.$thumbs.offset().top + t.thumbsHeight; n >= e + t.$productThumb[0].offsetHeight ? (t.$thumbs.css("top", parseInt(t.$thumbs.css("top")) - t.$productThumb[0].offsetHeight), t.$thumbUp.removeClass("disabled")) : n > e ? (t.$thumbs.css("top", parseInt(t.$thumbs.css("top")) - Math.ceil(n - e)), t.$thumbUp.removeClass("disabled"), t.$thumbDown.addClass("disabled")) : t.$thumbDown.addClass("disabled") }, n = function (t) { var e = t.$thumbsWrap.offset().top, n = t.$thumbs.offset().top; n <= e - t.$productThumb[0].offsetHeight ? (t.$thumbs.css("top", parseInt(t.$thumbs.css("top")) + t.$productThumb[0].offsetHeight), t.$thumbDown.removeClass("disabled")) : n < e ? (t.$thumbs.css("top", parseInt(t.$thumbs.css("top")) - Math.ceil(n - e)), t.$thumbDown.removeClass("disabled"), t.$thumbUp.addClass("disabled")) : t.$thumbUp.addClass("disabled") }, a = function (t) { if (void 0 !== t.$thumbs) { var e = void 0 !== t.thumbsIsVertical && t.thumbsIsVertical; t.thumbsIsVertical = t._isPgvertical && window.innerWidth >= Donald.minDesktopWidth, t.thumbsIsVertical ? (t.$thumbs.hasClass("owl-carousel") && t.$thumbs.trigger("destroy.owl.carousel").removeClass("owl-carousel"), t.thumbsHeight = t.$productThumb[0].offsetHeight * t.thumbsCount + parseInt(t.$productThumb.css("margin-bottom")) * (t.thumbsCount - 1), t.$thumbUp.addClass("disabled"), t.$thumbDown.toggleClass("disabled", t.thumbsHeight <= t.$thumbsWrap[0].offsetHeight), t.isQuickview && i()) : (e && t.$thumbs.css("top", ""), t.$thumbs.hasClass("owl-carousel") || t.$thumbs.addClass("owl-carousel").owlCarousel($.extend(!0, t.isQuickview ? { onInitialized: i, onResized: i } : {}, Donald.defaults.sliderThumbs))) } }, i = function () { this.$wrapper.find(".product-details").css("height", window.innerWidth > 767 ? this.$wrapper.find(".product-gallery")[0].clientHeight : "") }; return t.prototype.init = function (t) { var o = this, s = t.find(".product-single-carousel"); o.$wrapper = t, o.isQuickview = !!t.closest(".mfp-content").length, o._isPgvertical = !1, o.isQuickview && (i = i.bind(this), Donald.ratingTooltip()), s.on("initialized.owl.carousel", (function (t) { o.isQuickview || s.append('<a href="#" class="product-image-full"><i class="d-icon-zoom"></i></a>'), function (t) { t.$thumbs = t.$wrapper.find(".product-thumbs"), t.$thumbsWrap = t.$thumbs.parent(), t.$thumbUp = t.$thumbsWrap.find(".thumb-up"), t.$thumbDown = t.$thumbsWrap.find(".thumb-down"), t.$thumbsDots = t.$thumbs.children(), t.thumbsCount = t.$thumbsDots.length, t.$productThumb = t.$thumbsDots.eq(0), t._isPgvertical = t.$thumbsWrap.parent().hasClass("pg-vertical"), t.thumbsIsVertical = t._isPgvertical && window.innerWidth >= Donald.minDesktopWidth, t.$thumbDown.on("click", (function (n) { t.thumbsIsVertical && e(t) })), t.$thumbUp.on("click", (function (e) { t.thumbsIsVertical && n(t) })), t.$thumbsDots.on("click", (function () { var e = $(this), n = (e.parent().filter(t.$thumbs).length ? e : e.parent()).index(); t.$wrapper.find(".product-single-carousel").trigger("to.owl.carousel", n) })), a(t), Donald.$window.on("resize", (function () { a(t) })) }(o) })).on("translate.owl.carousel", (function (t) { var e = (t.item.index - $(t.currentTarget).find(".cloned").length / 2 + t.item.count) % t.item.count; o.thumbsSetActive(e) })), "complete" === Donald.status && (Donald.slider(s), Donald.quantityInput(t.find(".quantity"))), function (t) { t.$selects = t.$wrapper.find(".product-variations select"), t.$items = t.$wrapper.find(".product-variations"), t.$priceWrap = t.$wrapper.find(".product-variation-price"), t.$clean = t.$wrapper.find(".product-variation-clean"), t.$btnCart = t.$wrapper.find(".btn-cart"), t.variationCheck(), t.$selects.on("change", (function (e) { t.variationCheck() })), t.$items.children("a").on("click", (function (e) { $(this).toggleClass("active").siblings().removeClass("active"), e.preventDefault(), t.variationCheck() })), t.$clean.on("click", (function (e) { e.preventDefault(), t.variationClean(!0) })) }(this), function (t) { t.$wrapper.on("click", ".btn-cart", (function (e) { e.preventDefault(); var n = t.$wrapper, a = n.find(".product-name").text(); (n.closest(".product-popup").length || document.body.classList.contains("home")) && Donald.Minipopup.open({ message: 'Successfully added.<a href="cart.html" class="btn btn-link btn-sm btn-slide-right btn-infinite">View Cart<i class="la la-long-arrow-right"></i></a>', productClass: " product-cart", name: a, nameLink: n.find(".product-name > a").attr("href"), imageSrc: n.find(".product-image img").eq(0).attr("src"), imageLink: n.find(".product-name > a").attr("href"), price: n.find(".product-variation-price").children("span").html(), count: n.find(".quantity").val() }) })) }(this) }, t.prototype.thumbsSetActive = function (t) { var e = this.$thumbsDots.eq(t); if (this.$thumbsDots.filter(".active").removeClass("active"), e.addClass("active"), this.thumbsIsVertical) { var n = parseInt(this.$thumbs.css("top")) + t * this.thumbsHeight; n < 0 ? this.$thumbs.css("top", parseInt(this.$thumbs.css("top")) - n) : (n = this.$thumbs.offset().top + this.$thumbs[0].offsetHeight - e.offset().top - e[0].offsetHeight) < 0 && this.$thumbs.css("top", parseInt(this.$thumbs.css("top")) + n) } else this.$thumbs.trigger("to.owl.carousel", t, 100) }, t.prototype.variationCheck = function () { var t = !0; this.$selects.each((function () { return this.value || (t = !1) })), this.$items.each((function () { var e = $(this); if (e.children("a:not(.size-guide)").length) return e.children(".active").length || (t = !1) })), t ? this.variationMatch() : this.variationClean() }, t.prototype.variationMatch = function () { this.$priceWrap.find("span").text("$" + (Math.round(50 * Math.random()) + 200) + ".00"), this.$priceWrap.slideDown(), this.$clean.slideDown(), this.$btnCart.removeAttr("disabled") }, t.prototype.variationClean = function (t) { t && this.$selects.val(""), t && this.$items.children(".active").removeClass("active"), this.$priceWrap.slideUp(), this.$clean.css("display", "none"), this.$btnCart.attr("disabled", "disabled") }, function (e, n) { return e ? new t(e.eq(0), n) : null } }(), Donald.initProductSinglePage = function () { var t; function e() { $(Donald.parseTemplate(Donald.defaults.templateCartAddedAlert, { name: t.find("h1.product-name").text() })).insertBefore(t).fadeIn(), $(".sticky-sidebar").trigger("recalc.pin") } function n(e) { e.preventDefault(); var n; $(e.currentTarget); if ((n = t.find(".product-single-carousel").length ? t.find(".product-single-carousel .owl-item:not(.cloned) img") : t.find(".product-gallery-carousel").length ? t.find(".product-gallery-carousel .owl-item:not(.cloned) img") : t.find(".product-gallery img")).length) { var a = n.map((function () { var t = $(this); return { src: t.attr("data-zoom-image"), w: 800, h: 899, title: t.attr("alt") } })).get(), i = t.find(".product-single-carousel, .product-gallery-carousel").data("owl.carousel"), o = i ? (i.current() - i.clones().length / 2 + a.length) % a.length : t.find(".product-gallery > *").index(); if ("undefined" != typeof PhotoSwipe) { var s = $(".pswp")[0], l = new PhotoSwipe(s, PhotoSwipeUI_Default, a, { index: o, closeOnScroll: !1 }); l.init(), Donald.photoswipe = l } } } return function () { return (t = $(".product-single")).length ? document.body.classList.contains("home") ? (t.each((function () { Donald.initProductSingle($(this)) })), null) : null === Donald.initProductSingle(t) ? null : (Donald.zoomImage(".product-gallery.row"), t.on("click", ".product-image-full", n), t.on("click", ".btn-cart:not(.disabled)", e), void $("body").on("click", ".rating-form .rating-stars > a", (function (t) { var e = $(this); e.addClass("active").siblings().removeClass("active"), e.parent().addClass("selected"), e.closest(".rating-form").find("select").val(e.text()), t.preventDefault() }))) : null } }(), Donald.slider = function () { function t(t, e) { return this.init(t, e) } var e = function (t) { var e, n = ["", "-xs", "-sm", "-md", "-lg", "-xl"]; for (this.classList.remove("row"), o = 0; o < 6; ++o)for (e = 1; e <= 12; ++e)this.classList.remove("cols" + n[o] + "-" + e); if (this.classList.remove("gutter-no"), this.classList.remove("gutter-sm"), this.classList.remove("gutter-lg"), this.classList.contains("animation-slider")) for (var a = this.children, i = a.length, o = 0; o < i; ++o)a[o].setAttribute("data-index", o + 1) }, n = function (t) { var e, n = this.firstElementChild.firstElementChild.children, a = n.length; for (e = 0; e < a; ++e)if (!n[e].classList.contains("active")) { var i, o = Donald.byClass("appear-animate", n[e]); for (i = o.length - 1; i >= 0; --i)o[i].classList.remove("appear-animate") } }, a = function (t) { var e = this; $(t.currentTarget).find(".owl-item.active .slide-animate").each((function () { var t = $(this), n = $.extend(!0, {}, Donald.defaults.animation, Donald.parseOptions(t.data("animation-options"))), a = n.duration, i = n.delay, o = n.name; setTimeout((function () { if (t.css("animation-duration", a), t.css("animation-delay", i), t.addClass(o), t.hasClass("maskLeft")) { t.css("width", "fit-content"); var n = t.width(); t.css("width", 0).css("transition", "width " + (a || "0.75s") + " linear " + (i || "0s")), t.css("width", n) } a = a || "0.75s"; var s = Donald.requestTimeout((function () { t.addClass("show-content") }), i ? 1e3 * Number(i.slice(0, -1)) + 200 : 200); e.timers.push(s) }), 300) })) }, i = function (t) { $(t.currentTarget).find(".owl-item.active .slide-animate").each((function () { var t = $(this); t.addClass("show-content"), t.attr("style", "") })) }, o = function (t) { var e = $(t.currentTarget); this.translateFlag = 1, this.prev = this.next, e.find(".owl-item .slide-animate").each((function () { var t = $(this), e = $.extend(!0, {}, Donald.defaults.animation, Donald.parseOptions(t.data("animation-options"))); t.removeClass(e.name) })) }, s = function (t) { var e = this, n = $(t.currentTarget); if (1 == e.translateFlag) { if (e.next = n.find(".owl-item").eq(t.item.index).children().attr("data-index"), n.find(".show-content").removeClass("show-content"), e.prev != e.next) { if (n.find(".show-content").removeClass("show-content"), n.hasClass("animation-slider")) { for (var a = 0; a < e.timers.length; a++)Donald.deleteTimeout(e.timers[a]); e.timers = [] } n.find(".owl-item.active .slide-animate").each((function () { var t = $(this), n = $.extend(!0, {}, Donald.defaults.animation, Donald.parseOptions(t.data("animation-options"))), a = n.duration, i = n.delay, o = n.name; if (t.css("animation-duration", a), t.css("animation-delay", i), t.addClass(o), t.hasClass("maskLeft")) { t.css("width", "fit-content"); var s = t.width(); t.css("width", 0).css("transition", "width " + (a || "0.75s") + " linear " + (i || "0s")), t.css("width", s) } a = a || "0.75s"; var l = Donald.requestTimeout((function () { t.addClass("show-content"), e.timers.splice(e.timers.indexOf(l), 1) }), i ? 1e3 * Number(i.slice(0, -1)) + 500 * Number(a.slice(0, -1)) : 500 * Number(a.slice(0, -1))); e.timers.push(l) })) } else n.find(".owl-item").eq(t.item.index).find(".slide-animate").addClass("show-content"); e.translateFlag = 0 } $(window).trigger("appear.check") }; return t.zoomImage = function () { Donald.zoomImage(this.$element) }, t.zoomImageRefresh = function () { this.$element.find("img").each((function () { var t = $(this); if ($.fn.elevateZoom) { var e = t.data("elevateZoom"); void 0 !== e ? e.refresh() : (Donald.defaults.zoomImage.zoomContainer = t.parent(), t.elevateZoom(Donald.defaults.zoomImage)) } })) }, Donald.defaults.sliderPresets["product-single-carousel"].onInitialized = Donald.defaults.sliderPresets["product-gallery-carousel"].onInitialized = t.zoomImage, Donald.defaults.sliderPresets["product-single-carousel"].onRefreshed = Donald.defaults.sliderPresets["product-gallery-carousel"].onRefreshed = t.zoomImageRefresh, t.prototype.init = function (t, l) { this.timers = [], this.translateFlag = 0, this.prev = 1, this.next = 1; var d = t.attr("class").split(" "), r = $.extend(!0, {}, Donald.defaults.slider); d.forEach((function (t) { var e = Donald.defaults.sliderPresets[t]; e && $.extend(!0, r, e) })), $.extend(!0, r, Donald.parseOptions(t.attr("data-owl-options")), l), a = a.bind(this), o = o.bind(this), s = s.bind(this), t.on("initialize.owl.carousel", e).on("initialized.owl.carousel", n).on("translated.owl.carousel", s), t.hasClass("animation-slider") && t.on("initialized.owl.carousel", a).on("resized.owl.carousel", i).on("translate.owl.carousel", o).on("translated.owl.carousel", s), t.owlCarousel(r) }, function (e, n) { Donald.$(e).each((function () { var e = $(this); Donald.call((function () { new t(e, n) })) })) } }(), Donald.quantityInput = function () { function t(t) { return this.init(t) } return t.min = 1, t.max = 1e6, t.value = 1, t.prototype.init = function (e) { var n = this; n.$minus = !1, n.$plus = !1, n.$value = !1, n.value = !1, n.startIncrease = n.startIncrease.bind(n), n.startDecrease = n.startDecrease.bind(n), n.stop = n.stop.bind(n), n.min = parseInt(e.attr("min")), n.max = parseInt(e.attr("max")), n.min || e.attr("min", n.min = t.min), n.max || e.attr("max", n.max = t.max), n.$value = e.val(n.value = t.value), n.$minus = e.prev().on("mousedown", (function (t) { t.preventDefault(), n.startDecrease() })).on("touchstart", (function (t) { t.cancelable && t.preventDefault(), n.startDecrease() })).on("mouseup", n.stop), n.$plus = e.next().on("mousedown", (function (t) { t.preventDefault(), n.startIncrease() })).on("touchstart", (function (t) { t.cancelable && t.preventDefault(), n.startIncrease() })).on("mouseup", n.stop), Donald.$body.on("mouseup", n.stop).on("touchend", n.stop).on("touchcancel", n.stop) }, t.prototype.startIncrease = function (t) { t && t.preventDefault(); var e = this; e.value = e.$value.val(), e.value < e.max && e.$value.val(++e.value), e.increaseTimer = Donald.requestTimeout((function () { e.speed = 1, e.increaseTimer = Donald.requestInterval((function () { e.$value.val(e.value = Math.min(e.value + Math.floor(e.speed *= 1.05), e.max)) }), 50) }), 400) }, t.prototype.stop = function (t) { Donald.deleteTimeout(this.increaseTimer), Donald.deleteTimeout(this.decreaseTimer) }, t.prototype.startDecrease = function () { var t = this; t.value = t.$value.val(), t.value > t.min && t.$value.val(--t.value), t.decreaseTimer = Donald.requestTimeout((function () { t.speed = 1, t.decreaseTimer = Donald.requestInterval((function () { t.$value.val(t.value = Math.max(t.value - Math.floor(t.speed *= 1.05), t.min)) }), 50) }), 400) }, function (e) { Donald.$(e).each((function () { var e = $(this); e.data("quantityInput") || e.data("quantityInput", new t(e)) })) } }(), Donald.Menu = { init: function () { this.initMenu(), this.initMobileMenu(), this.initFilterMenu(), this.initCategoryMenu(), this.initCollapsibleWidget() }, initMenu: function () { $(".menu li").each((function () { this.lastElementChild && ("UL" === this.lastElementChild.tagName || this.lastElementChild.classList.contains("megamenu")) && this.classList.add("submenu") })), Donald.$window.on("resize", (function () { $(".main-nav .megamenu").each((function () { var t = $(this), e = t.offset().left, n = e + t.outerWidth() - (window.innerWidth - 20); n > 0 && e > 20 && t.css("margin-left", -n) })) })) }, initMobileMenu: function () { function t() { Donald.$body.removeClass("mmenu-active") } $(".mobile-menu li, .toggle-menu li").each((function () { if (this.lastElementChild && ("UL" === this.lastElementChild.tagName || this.lastElementChild.classList.contains("megamenu"))) { var t = document.createElement("span"); t.className = "toggle-btn", this.firstElementChild.appendChild(t) } })), $(".mobile-menu-toggle").on("click", (function () { Donald.$body.addClass("mmenu-active") })), $(".mobile-menu-overlay").on("click", t), $(".mobile-menu-close").on("click", t), Donald.$window.on("resize", t) }, initFilterMenu: function () { $(".search-ul li").each((function () { if (this.lastElementChild && "UL" === this.lastElementChild.tagName) { var t = document.createElement("i"); t.className = "fas fa-chevron-down", this.classList.add("with-ul"), this.firstElementChild.appendChild(t) } })), $(".with-ul > a i, .toggle-btn").on("click", (function (t) { $(this).parent().next().slideToggle(300).parent().toggleClass("show"), t.preventDefault() })) }, initCategoryMenu: function () { var t = $(".category-dropdown"); if (t.length) { var e = t.find(".dropdown-box"); if (e.length) { var n = $(".main").offset().top + e[0].offsetHeight; (window.pageYOffset > n || window.innerWidth < Donald.minDesktopWidth) && t.removeClass("show"), window.addEventListener("scroll", (function () { window.pageYOffset <= n && window.innerWidth >= Donald.minDesktopWidth && t.removeClass("show") }), { passive: !0 }), $(".category-toggle").on("click", (function (t) { t.preventDefault() })), t.on("mouseover", (function (e) { window.pageYOffset > n && window.innerWidth >= Donald.minDesktopWidth && t.addClass("show") })), t.on("mouseleave", (function (e) { window.pageYOffset > n && window.innerWidth >= Donald.minDesktopWidth && t.removeClass("show") })) } if (t.hasClass("with-sidebar")) { var a = Donald.byClass("sidebar"); a.length && (t.find(".dropdown-box").css("width", a[0].offsetWidth - 20), Donald.$window.on("resize", (function () { t.find(".dropdown-box").css("width", a[0].offsetWidth - 20) }))) } } }, initCollapsibleWidget: function () { $(".widget-collapsible .widget-title").each((function () { var t = document.createElement("span"); t.className = "toggle-btn", this.appendChild(t) })), $(".widget-collapsible .widget-title").on("click", (function (t) { var e = $(this); if (!e.hasClass("sliding")) { var n = e.siblings(".widget-body"); e.hasClass("collapsed") || n.css("display", "block"), e.addClass("sliding"), n.slideToggle(300, (function () { e.removeClass("sliding") })), e.toggleClass("collapsed") } })) } }, Donald.Minipopup = function () { var t, e = 0, n = [], a = !1, i = [], o = !1, s = function () { if (!a) for (var t = 0; t < i.length; ++t)(i[t] -= 200) <= 0 && this.close(t--) }; return { init: function () { var e = document.createElement("div"); e.className = "minipopup-area", Donald.byClass("page-wrapper")[0].appendChild(e), (t = $(e)).on("click", ".btn-close", (function (t) { self.close($(this).closest(".minipopup-box").index()) })), this.close = this.close.bind(this), s = s.bind(this) }, open: function (a, l) { var d, r = this, c = $.extend(!0, {}, Donald.defaults.minipopup, a); c.detailTemplate = Donald.parseTemplate(null != c.count ? c.priceQuantityTemplate : c.priceTemplate, c), null != c.rating && (c.detailTemplate += Donald.parseTemplate(c.ratingTemplate, c)), d = $(Donald.parseTemplate(c.template, c)), r.space = c.space, d.appendTo(t).css("top", -e).find("img")[0].onload = function () { e += d[0].offsetHeight + r.space, d.addClass("show"), d.offset().top - window.pageYOffset < 0 && (r.close(), d.css("top", -e + d[0].offsetHeight + r.space)), d.on("mouseenter", (function () { r.pause() })).on("mouseleave", (function () { r.resume() })).on("touchstart", (function (t) { r.pause(), t.stopPropagation() })), Donald.$body.on("touchstart", (function () { r.resume() })), n.push(d), i.push(c.delay), i.length > 1 || (o = setInterval(s, 200)), l && l(d) } }, close: function (t) { var a = void 0 === t ? 0 : t, s = n.splice(a, 1)[0]; i.splice(a, 1)[0], e -= s[0].offsetHeight + this.space, s.removeClass("show"), setTimeout((function () { s.remove() }), 300), n.forEach((function (t, e) { e >= a && t.hasClass("show") && t.stop(!0, !0).animate({ top: parseInt(t.css("top")) + t[0].offsetHeight + 20 }, 600, "easeOutQuint") })), n.length || clearTimeout(o) }, pause: function () { a = !0 }, resume: function () { a = !1 } } }(), Donald.Shop = { init: function () { this.initProductsQuickview(), this.initProductsCartAction(), this.initProductsLoad(), this.initProductsScrollLoad(".scroll-load"), this.initProductType("slideup"), this.initVariation(), Donald.call(Donald.ratingTooltip, 500), this.initSelectMenu(".select-menu"), Donald.priceSlider(".filter-price-slider") }, initVariation: function (t) { $(".product:not(.product-single) .product-variations > a").on("click", (function (t) { var e = $(this), n = e.closest(".product").find(".product-media img"); n.data("image-src") || n.data("image-src", n.attr("src")), e.toggleClass("active").siblings().removeClass("active"), e.hasClass("active") ? n.attr("src", e.data("src")) : (n.attr("src", n.data("image-src")), e.blur()), t.preventDefault() })) }, initProductType: function (t) { "slideup" === t && ($(".product-slideup-content .product-details").each((function (t) { var e = $(this), n = e.find(".product-hide-details").outerHeight(!0); e.height(e.height() - n) })), $(Donald.byClass("product-slideup-content")).on("mouseenter touchstart", (function (t) { var e = $(this), n = e.find(".product-hide-details").outerHeight(!0); e.find(".product-details").css("transform", "translateY(" + -n + "px)"), e.find(".product-hide-details").css("transform", "translateY(" + -n + "px)") })).on("mouseleave touchleave", (function (t) { var e = $(this); e.find(".product-hide-details").outerHeight(!0); e.find(".product-details").css("transform", "translateY(0)"), e.find(".product-hide-details").css("transform", "translateY(0)") }))) }, initSelectMenu: function (t) { Donald.$body.on("mousedown", ".select-menu", (function (t) { var e = $(t.currentTarget), n = $(t.target), a = e.hasClass("opened"); $(".select-menu").removeClass("opened"), e.is(n.parent()) ? (!a && e.addClass("opened"), t.stopPropagation()) : (n.parent().toggleClass("active"), n.parent().hasClass("active") ? ($(".select-items").children().length < 2 && $(".select-items").show(), $('<a href="#" class="select-item">' + n.text() + '<i class="la la-close"></i></a>').insertBefore(".select-items .filter-clean").hide().fadeIn().data("link", n.parent())) : $(".select-items > .select-item").filter((function (t, e) { return e.innerText == n.text() })).fadeOut((function () { $(this).remove(), $(".select-items").children().length < 2 && $(".select-items").hide() }))) })), $(".select-items .filter-clean").on("click", (function (t) { $(this).siblings().each((function () { var t = $(this).data("link"); t && t.removeClass("active") })), $(this).parent().fadeOut(), t.preventDefault() })), $(".filter-clean").on("click", (function (t) { $(".shop-sidebar .filter-items .active").removeClass("active"), t.preventDefault() })), Donald.$body.on("click", ".select-menu a", (function (t) { t.preventDefault() })), Donald.$body.on("click", ".select-item i", (function (t) { $(t.currentTarget).parent().fadeOut((function () { var t = $(this), e = t.data("link"); e && e.toggleClass("active"), t.remove(), $(".select-items").children().length < 2 && $(".select-items").hide() })), t.preventDefault() })), Donald.$body.on("mousedown", (function (t) { $(".select-menu").removeClass("opened") })), Donald.$body.on("click", ".filter-items a", (function (t) { var e = $(this).closest(".filter-items"); e.hasClass("search-ul") || e.parent().hasClass("select-menu") || ($(this).parent().toggleClass("active"), t.preventDefault()) })) }, initProductsQuickview: function () { Donald.$body.on("click", ".btn-quickview", (function (t) { t.preventDefault(), Donald.popup({ items: { src: "ajax/quickview.html" }, callbacks: { ajaxContentAdded: function () { this.wrap.imagesLoaded((function () { Donald.initProductSingle($(".mfp-product .product-single")) })) } } }, "quickview") })) }, initProductsCartAction: function () { Donald.$body.on("click", ".btn-product-icon.btn-cart, .btn-product.btn-cart", (function (t) { t.preventDefault(); var e = $(this).closest(".product"); e.hasClass("product-single") || Donald.Minipopup.open({ message: 'Successfully added.<a href="cart.html" class="btn btn-link btn-sm btn-slide-right btn-infinite">View Cart<i class="la la-long-arrow-right"></i></a>', productClass: " product-cart", name: e.find(".product-name").text(), nameLink: e.find(".product-name > a").attr("href"), imageSrc: e.find(".product-media img").attr("src"), imageLink: e.find(".product-name > a").attr("href"), price: e.find(".product-price").html(), count: e.find(".quantity").val() }) })) }, initProductsLoad: function () { $(".btn-load").on("click", (function (t) { var e = $(this), n = $(e.data("load-to")), a = e.html(); e.text("Loading ..."), t.preventDefault(), $.ajax({ url: e.attr("href"), success: function (t) { var i = $(t); setTimeout((function () { n.isotope("insert", i), e.html(a); var t = parseInt(e.data("load-count") ? e.data("load-count") : 0); e.data("load-count", ++t), t >= 2 && e.hide() }), 350) }, failure: function () { e.text("Sorry something went wrong.") } }) })) }, initProductsScrollLoad: function (t) { var e, n = Donald.$(t), a = function (t) { window.pageYOffset > e + n.outerHeight() - window.innerHeight - 150 && "loading" != n.data("load-state") && $.ajax({ url: "ajax/ajax-products.html", success: function (t) { var e = $(t); n.data("load-state", "loading"), n.next().hasClass("load-more-overlay") ? n.next().addClass("loading") : $('<div class="mt-4 mb-4 load-more-overlay loading"></div>').insertAfter(n), setTimeout((function () { n.next().removeClass("loading"), n.append(e), setTimeout((function () { n.find(".product-wrap.fade:not(.in)").addClass("in") }), 200), n.data("load-state", "loaded") }), 500); var i = parseInt(n.data("load-count") ? n.data("load-count") : 0); n.data("load-count", ++i), i > 2 && window.removeEventListener("scroll", a, { passive: !0 }) }, failure: function () { $this.text("Sorry something went wrong.") } }) }; n.length > 0 && (e = n.offset().top, window.addEventListener("scroll", a, { passive: !0 })) } }, Donald.prepare = function () { Donald.$body.hasClass("with-flex-container") && window.innerWidth >= 1200 && Donald.$body.addClass("sidebar-active") }, Donald.initLayout = function () { Donald.isotopes(".grid:not(.grid-float)"), Donald.stickySidebar(".sticky-sidebar") }, Donald.init = function () { Donald.appearAnimate(".appear-animate"), Donald.Minipopup.init(), Donald.Shop.init(), Donald.initProductSinglePage(), Donald.slider(".owl-carousel"), Donald.headerToggleSearch(".hs-toggle"), Donald.stickyContent(".product-sticky-content, .sticky-header"), Donald.stickyContent(".sticky-footer", Donald.defaults.stickyFooter), Donald.sidebar("sidebar"), Donald.sidebar("right-sidebar"), Donald.quantityInput(".quantity"), Donald.playableVideo(".post-video"), Donald.initAccordion(".card-header > a"), Donald.initTab(".nav-tabs"), Donald.initAlert(".alert"), Donald.parallax(".parallax"), Donald.countTo(".count-to"), Donald.countdown(".product-countdown, .countdown"), Donald.Menu.init(), Donald.initZoom(), Donald.initNavFilter(".nav-filters .nav-filter"), Donald.initPopups(), Donald.initPurchasedMinipopup(), Donald.initScrollTopButton(), Donald.status = "complete" }, Donald.prepare(), window.onload = function () { Donald.status = "loaded", Donald.$body.addClass("loaded"), Donald.$window.trigger("donald_load"), Donald.call(Donald.initLayout), Donald.call(Donald.init), Donald.$window.trigger("donald_complete") } }();