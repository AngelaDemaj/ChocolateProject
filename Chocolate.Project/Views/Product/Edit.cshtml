@using Chocolate.DataAccess.Models.Enums
@model Chocolate.DataAccess.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Products";
}

@section Styles{
    <link href="~/assets/libs/multiselect/multi-select.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/assets/libs/dropify/dropify.min.css" type="text/css" />
}

<h2>Edit Product</h2>
<hr />

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card-box">
                <div class="p-2">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <form asp-action="Edit" enctype="multipart/form-data">

                        <div class="form-group row">
                            <label asp-for="Barcode" class="col-md-2 col-form-label">Barcode</label>
                            <div class="col-md-10">
                                <input asp-for="Barcode" class="form-control" />
                            </div>
                            <span asp-validation-for="Barcode" class="text-danger"></span>
                        </div>

                        <div class="form-group row">
                            <label asp-for="Name" class="col-md-2 col-form-label">Name</label>
                            <div class="col-md-10">
                                <input asp-for="Name" class="form-control" />
                            </div>
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group row">
                            <label asp-for="Description" class="col-md-2 col-form-label">Description</label>
                            <div class="col-md-10">
                                <textarea asp-for="Description" class="form-control"></textarea>
                            </div>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="form-group row">
                            <label asp-for="Price" class="col-md-2 col-form-label">Price</label>
                            <div class="col-md-10">
                                <input asp-for="Price" type="number" step="0.01" class="form-control" />
                            </div>
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>

                        <div class="form-group row">
                            <label asp-for="Weight" class="col-md-2 col-form-label">Weight</label>
                            <div class="col-md-10">
                                <input asp-for="Weight" type="number" step="0.01" class="form-control" />
                            </div>
                            <span asp-validation-for="Weight" class="text-danger"></span>
                        </div>

                        <div class="form-group row">
                            <label asp-for="Category" class="col-md-2 col-form-label">Category</label>
                            <div class="col-md-10">
                                <select asp-for="Category" class="form-control" asp-items="Html.GetEnumSelectList<ProductCategory>()"></select>
                            </div>
                            <span asp-validation-for="Category" class="text-danger"></span>
                        </div>

                        <div class="form-group row">
                            <h5 class="mt-3 col-md-2">Raw Materials</h5>
                            @* sto selectlist to name,name shmainei oti deixnw sto front name kai otan pataw post pali stelnw pisw names *@
                            <div class="col-md-10">
                                <select asp-for="RawMaterialIds" asp-items="@(new SelectList(Model.RawMaterials, "Id", "Name"))" multiple="multiple"></select>
                            </div>
                        </div>

                        @if (Model.ImageString != null)
                        {
                            <div class="form-group row">
                                <label class="col-md-2 col-form-label">Product Image</label>
                                <div class="col-md-10">
                                    <img src="@Model.ImageString" />
                                </div>
                            </div>
                        }
                        else if (Model.ImageString == null)
                        {
                            <div class="form-group row">
                                <label class="col-md-2 col-form-label" asp-for="ImageData">Product Image</label>
                                <div class="col-md-10">
                                    <input type="file" class="dropify" id="ProductImage" asp-for="ImageData" data-height="250">
                                </div>
                            </div>
                        }
                        <button type="submit" class="btn btn-bordered-primary waves-effect  width-md waves-light">Save</button>
                        <a asp-action="Index" class="btn btn-lighten-primary waves-effect waves-primary width-md">Back to List</a>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/assets/libs/multiselect/jquery.multi-select.js"></script>
    <script src="~/assets/libs/jquery-quicksearch/jquery.quicksearch.min.js"></script>
    <script src="~/assets/libs/dropify/dropify.min.js"></script>
    <script src="~/assets/js/pages/form-fileupload.init.js"></script>
    <script>
        jQuery(document).ready(function () {
            //advance multiselect start
            $('#RawMaterialIds').multiSelect({
                selectableHeader: "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
                selectionHeader: "<input type='text' class='form-control search-input' autocomplete='off' placeholder='search...'>",
                afterInit: function (ms) {
                    var that = this,
                        $selectableSearch = that.$selectableUl.prev(),
                        $selectionSearch = that.$selectionUl.prev(),
                        selectableSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                        selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                    that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                        .on('keydown', function (e) {
                            if (e.which === 40) {
                                that.$selectableUl.focus();
                                return false;
                            }
                        });

                    that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                        .on('keydown', function (e) {
                            if (e.which == 40) {
                                that.$selectionUl.focus();
                                return false;
                            }
                        });
                },
                afterSelect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                },
                afterDeselect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                }
            });
        })
    </script>
}